置换算法:
        选择被置换的物理页面
        尽可能减少页面的调入调出次数

        页面锁定:
            这些代码 不能放到外存中      如 操作系统代码  常用代码
        局部页面置换算法:
            置换页面的选择范围仅局限于当前进程占用的物理内存页面

            最优算法:
                    依照未来那些页面不访问 进行置换   不能实现
                    评价依据
            先进先出:
                    链表 
            最近最久未使用算法:
                    统计过去 最长时间 一段时间没有访问的
                    记录上一次访问时间
                    不太可能实现  开销太大维护栈
            时钟算法:
                    对页面的访问情况 进行大致统计
                    数据结构:
                        在页表项中增加访问位 描述页面在过去一段时间访问
                            情况
                        各页面组织成 环形链表
                        指针指向最先调入的页面
                    算法：
                        访问页面时　在页面项纪录页面访问情况
                        缺页时　从指针处　顺序查找未被访问的页面替换
                改进的时钟算法：
                    如果替换的页面修改了　则不进行替换　直接跳过
            最不常用算法:
                    缺页时　　置换访问次数最小的页面
                    每个页面都有一个计数器      开销太大
            局部置换算法特征：
                    Belady现象:
                        采用FIFO等算法时 可能出现分配的物理页面增加
                            缺页次数反而升高的异常现象
                        原因:
                            FIFO算法的置换特性和进程访问内存的动态特征矛盾:
        全局页面置换算法:
            思路:
                为进程分配可变数量的物理页面
                进程在不同阶段的内存需求是变化的
            工作集算法:
                工作集:一个进程当前正在使用的逻辑页面集合
                常驻集:当前时刻 进程实际驻留内存中的页面集合

                思路:
                    换出不在工作集中的页面
                    开销很大.....
                
            缺页率算法:
                缺页率 = 缺页发生时间间隔平均值的倒数
                缺页率过高 增加页面
                缺页过低 CPU利用率很低 较少页面
                工作集: 窗口 2  
                    每次放生缺页时 检查一下访问次数是否大于2 大于2的话 
                    将这几次没有访问到的页面换出 小于2 直接添加










