启动时计算器内存和磁盘布局：
    
     内存空间如下：  内存分为：ROM RAM           BIOS属于ROM
        4GB

                空闲空间

        1MB                                 实模式下：寻址为1M 
                BIOS启动插件
        640KB
                空闲空间
        0x0 

        1 当加电的时候： CS:IP = 0xf000:fff0  指向BIOS
        2 BIOS提供的功能：只能工作在实模式下 不能工作在保护模式
                基本的输入输出功能
                        从磁盘 从软盘读数据
                        在屏幕上显示 字符显示 INT 10h
                        INT 13h  磁盘扇区读写
                        INT 15h 检查内存大小
                        INT 16h 键盘输入
                系统设置信息
                        从硬盘启动 从网络启动 
                开机自检程序
                系统自启动程序。。。
            执行过程：
                硬件自检：POST
                    内存显卡 。。是否正常工作  进行设备初始化
                    执行系统bIOS 进行系统检测  检查USB等即插即用的设备
                    更新CMOS中的扩展系统配置数据ESCD 硬件。。。
                按照指定启动顺序 从软盘 硬盘或光驱启动 读入主引导记录
        3 主引导程序： 去哪个扇区 读取程序操作系统 
                因为：现在电脑一般都有多个分区 每个分区上有不同的操作系统
                结束标志： 55AA
                        
            格式： MBR           一个字节8位
                一共512字节 一个扇区 446存放启动代码  剩下的字节存放 
                (64字节) 硬盘分区表    每个分区的状态 
                启动代码： 446字节
                        检查分区表正确性
                        加载并跳转到硬盘的引导程序
                硬盘分区表：64字节
                        描述分区状态位置
                        每个分区描述信息占据16kb
            分区引导扇区格式： 
                    文件卷头： 文件系统描述信息
                    结束标志： 55AA
                    跳转指令： 跳转到启动代码 
                          指令和     与平台相关 
                    启动代码： 跳转到加载程序 bootloader

        4 将加载程序(bootloader) 从磁盘的引导扇区 (512字节) 加到0x7c00
            跳转到CS：IP = 0000:7c00 
            控制权交给加载程序 由加载程序 加载操作系统
                加载程序识别文件系统 加载操作系统

            执行过程：
                加载程序从文件系统中读取 启动配置信息 
                        选择 在正常模式启动 安全模式启动。。。
                加载操作系统内核


系统启动规范：
        BIOS： 固化到计算机主板上的程序
            BIOS-MBR: 上面所说的内容 ：只能有四个分区 64字节 每个16
            BIOS-GPT： 可以描述 更多的分区
            PXE：       可以从网络启动 在BIOS加入网络协议栈
        UEFI:  同一可扩展固件接口
            

关于进制的思考：
        20位0 1可以有2的20次方情况  可以寻址2的20次方的地址
        11110010010011100 这些从2的0开始累加 



中断  异常 和 系统调用：
        外部设备        中断向量表       设备驱动
            中断：外部设备
        异常（除0）     中断向量表       回收应用程序资源
            代码执行出错 除0
        应用程序        中断向量表    系统调用表  系统调用实现 
            系统调用： 应用服务 主动发出的请求

    硬件：
            可以禁止中断
            检测： 那个设备发出请求 设备号
        硬件中断服务例程可以被打断：
            按照设备 优先级来处理
        异常服务例程也可以被打断

    软件：  
            保护现场    
            中断处理
            服务例程
            恢复现场

    系统调用：
            Win32 API
            POSIX API
            java API  用于java虚拟机 JVM
            
        每个系统调用都有一个编号 
            系统使用指令：
                INT IRET
                内核堆栈 系统调用到内核调用
                        参数验证 EAX .....
                用户堆栈 再回到用户堆栈 
            函数调用：
                CALL RET














