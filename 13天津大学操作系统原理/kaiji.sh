开机启动过程：
    当一开机时：进入 real model
        cs = FFFF       ip = 0000   指令地址：FFFF0
        FFFF0的地址到 主板 上的一段代码POST(power on style test)
            这段代码的功能是 检查cup 内存。。。其他硬件资源 自检过程
            POST最后自检完成后 后面有 POST LIST 这里写的 从哪里
                启动系统 从硬盘 启动 从光驱启动 从。。。。。
                    如果从硬盘启动： 直接寻找 0C 0H 0R
                                    这里就开始写操作系统代码
            一般开始 开启A20  再进入保护模式
            加载内核  （linux会通过文件文件系统找到/boot目录
                         看选择加载那个内核）
            把控制权交给内核。。。。内核开始。。。。
                    
X86保护模式：       32cup而言 80386
    可以访问的实际物理的内存：
                一般情况下是2的32次方也就是4G           ？？
            在80680中有个偏移扩展 加上：64G 再大于这个的话只能使用64cup   ??
        怎么进行实际物理内存寻址的：
            段寄存器16位 是用作 标记位 有其他作用 所以：实际物理内存寻址2^32
            段寄存器：
                前13位              14位            15 16
                索引区             0 全局段         四个级别 0 1 2 3 
                                   1 局部段         级别高的可以访问级别低的
                                                    反之不行
            全局段：一般存放 内核地址   
            局部段：一般存放  用户进程      
                一个进程 都拥有自己的代码还有内核代码的映射 因为要进行
                系统调用
            全局表：
                通过段寄存器的前13位  找到全局表对应的地址 找到段的起始位置
                    段的起始位置也是32的再直接加上偏移的32 还是一个32？？这
                    个地址成为 线性地址？？？
                    这样逻辑地址变为了线性地址
                    32为的线性地址   通过 2级页目录 到实际物理地址  
                                                  高10位是页表项
                                                  中间10位是 页目录
                                                  后12位  ....
            局部表：

    逻辑地址：  2的46次方
    cpu的寻址过程:
    逻辑地址->线性地址->实际物理地址

    硬盘知识：
        硬盘由 很多的类似光盘放在一起 组成 每一个光盘上都有上下两个磁针
            访问参数:  第几柱面  那个面（上或下）  第几扇区
    

