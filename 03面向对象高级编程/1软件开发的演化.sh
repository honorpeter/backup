结构：
        等价与　数学上的群　等一些观念。。。
科学模型：
    定义：
            一般值科学上的　数学公式　牛顿定理。。。。。 
             质能方程
    性质：
            可证明性
            可解释性
            可证明性

工程模型：
        运行科学模型　  和　数学　　来进行现实世界的应用

软件模型：
        主观性强
        可模拟性不强
        转化为代码需要经历多种模型的转化

        软件开发的复杂性：
            很难精确表达出用户的需求
            开发过程中需求经常变化
            。。。。

方法与方法学：
        方法　＝　模型　＋　过程

        方法轮是一种观点　是一个有理论意义的结构

        软件方法学:指导实践      软件工程学:实践

    方法学历史：    方法学就是一些视角　　
        结构化方法：
                数据流加工      c语言　之类的。。。
        E-R图：
                数据结构　  数据库
        状态图：
                事件驱动行为一般用到    状态转化
        规则：
                象棋。。   在规则之上使用 博弈算法 启发式搜索算法　回溯算法
        形式化方法：
                代数方法    
                    定义清晰　  无二意性
                    程序正确性的证明
                    可推导
        面向对象：
                和自然的认知    是一样的
                数据和操作的封装
        基于构建的软件开发：
                在面向对象之上的又一次封装
                构件的组合  组合成一个完整的工程
        面向服务：
                向一个服务器上  发送问题  返回结果
        面向方面：
                解决面向对象的不好的： 写一个对象的时候 处理安全 处理异常
                这样 会心乱。。。 所以产生了面向方面
                对Web方面还是很使用的
        智能Agent
                人工智能
                    自治性
                    社会性
                    反应性
                    能动性
                    人/硬件机器人/软件机器人


对UML进行扩展的必要：
        为了适应不同的方法：
            数据库建模  工作流
        为了适应不同的领域：
            实时建模领域
        为了适应不同的平台：
            COBRA EJB 
        为了适应新的方法与技巧
            面向方面    语义网络。。。
    了解UML造字规则 便可理解其他的扩展了
    UML扩展机制：
        扩展UML的语法和语义 适合不同领域不同层次的建模
        保证扩展方案仍遵守一定的规范 仍然可以共享和交流

    SysMl:
        UML的扩展：
            可以进行 硬件建模   还可以包含人。。。 扩充了。。。

    元和元模型：
        编程语言都可以用BNF描述 这就是元语言 语言的语言
        元模型： 描述UML的语法规则的语言


    元模型：
            M0层：      实例层      内存中的实际情况
            M1层：      类层        数据 操作
            M2层：      类层共同属性

            UML中：
                分析上下文有关语法：
                    使用OCL语言
                分析上下文无关语法：
                    使用类图
    UML扩展机制：
            UML1.x
                Stereotypes
                Constrain
                Tagged
            UML2.0
                Profile     :原来的基础上定义的一些结构 
                Meta model  ：可以自己定义一些新的 结构

软件开发的未来：
        三维打印机：
                构造一个模型 可以进行打印
                输入一个模型 便可以出来代码
        MDA的产生发展：
                模型驱动。。。。。
        对象与对象：
            


软件结构师的能力：
        建模语言
        模式
        方法学
        模型
        架构
        重构
        。。。。
软件工程能解决的问题：
        攸关系统
        中小型创新企业
        大型IT企业
        软件外包企业

        
        




















