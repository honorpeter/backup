设计：
        有目标和计划的行动
        .....
问题域部分的设计：
        业务逻辑 可以复用  软件实现级数再变 但是业务逻辑不变

基于复用和为了复用的设计：
        为复用的设计：  向上复用
            建立新的类的时候 看以前 有没有可复用的类 
            建立泛化关系        
            多出来的属性怎么办： 1 直接修改源代码  2 
          向下复用：
            当建立新的类的时候   考虑向下扩展  
        复用方法：
            重载   修改类中函数参数
        根据编程语言调整泛化关系：
                泛化与聚合的互换：
                     继承两个父类   可变化为 一个继承 和一个组合关系    
                     使用C语言的话 都使用组合关系
                    类和类之间的关系： 泛化关系 继承实现 效率高 
                            是一组对象和一组对象之间的关系      
                    委托关系  组合关系 不知道怎么实现  效率底 灵活
                            是一个对象和一个对象之间的关系












