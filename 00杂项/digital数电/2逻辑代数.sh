罗辑变量：
        X Y Z
逻辑常量：
        0       1 
基本运算：
    二元运算：
        and         &   .       
                            图形表示：
                                国际
                                国标
        or          ||  +
                            图形表示：
    单元运算
        not         !  -        。

    复合运算：      使用上面三中运算 复合的运算
            与非
            或非
            
            与或非

            异或:       A 异或 B = A¯B + ¯AB
                偶数个变量的异或为0    
                奇数个变量异或为 变量
            同或:       A 同或 B = ¯A¯B + AB
                相同为1 相异为0
                偶数个变量的同或和异或是 非
                奇数个变量的同或异或是 相等的
罗辑函数：
        ϝ(x) 
    描述方法：
        真值表：
                将输入变量的组合  所有情况　列出来了　对应输出也列出来
        逻辑函数表达方式：
                写出真值表 后  直接就可以写出表达式了  
                变量ABC + AfeiBC    每一种情况都写上
        卡诺图：
                一个平面    行列  组合

                    0       1
                00
                01
                10
                11

        时序图 波形图：
                时间轴  。。。
        语言描述：
                VHDL
逻辑代数基础：
        逻辑代数公理：
            分配率
            交换律
            0 1律：     
                    0 + A = A
                    1 + A = 1
                    0 or A = 0
                    1 or A = A
            互补律：
                    A and notA = 0
                    A or notA  = 1
            重叠律：
                    A and A = A
                    A or  A = A 
            还原律：
                    not not A = A
            反演律：
                    not(A and B) = notA or notB
                    not(A or B)  = notA and notB
    逻辑代数常用公式：
            吸收律
                    A + AB = A           A(A + B) = A
                
                    AB + AnotB = A      (A + B)(A + notB) = A

                    A + notAB  = A + B   A(notA + B) = AB

                    AB + ¯AC + BC = AB + ¯AC
    基本定理：
            代入定理：
                可以使用AB 代替A 代入任意公式成立
            反演定理：
                对于任何一个代数式Y
                如果改变Y中的 0 变1  1 变0    变量变为 not变量 等于 notY
                不在一个变量上的非号 保留 ¯(A + B)  saved
                     可以使用这个定理求解 反函数
            对偶定理：
                若两逻辑式相等 则他们的对偶式也相等
                变换法则：变量不变    0 变 1          1 变 0  

                    


            










