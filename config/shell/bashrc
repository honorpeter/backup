# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
#alias hh='sudo shutdown -h now'
#alias hh='sudo poweroff'
alias reboot='sudo reboot'
alias my='mysql -u root -pxiaolong'
alias up='cd ..'
alias x='chmod u+x'
alias lm='ls -F | more'
alias yule='sudo mount /dev/sda6 /media/xiaolong/娱乐'
alias push='git push origin master'
alias add='git add *'
#地址别名
alias test='cd ~/test/'
alias shell='cd ~/test/shell/'
alias www='cd /home/wwwroot/default/'
alias linux='cd ~/test/linux'
alias c='cd ~/test/c'
alias cu='cd ~/test/wangyi/c'
alias bianyi='cd ~/test/wangyi/bianyiqi'
alias kernel='cd ~/test/wangyi/linuxkernel'
alias v='cd ~/test/vim/'
alias long='cd /media/xiaolong'
alias network='cd /media/xiaolong/娱乐/video/network'
alias sys='cd /media/xiaolong/娱乐/video/systerm'
alias lisan='cd /media/xiaolong/娱乐/video/lisanshuxue'
alias bian='cd /media/xiaolong/娱乐/video/bianyiyuanli'
alias signal='cd /media/xiaolong/娱乐/video/keben/signals'
alias digital='cd /media/xiaolong/娱乐/video/keben/digital'
alias algri='cd /media/xiaolong/娱乐/video/algri'
alias elec='cd /media/xiaolong/娱乐/video/keben/elec'
alias hui='cd ~/test/huibian'
alias doc='cd ~/Documents'
alias lookc='cat count'
#常用快捷键
alias pic='rm ~/Desktop/pic/*'
alias bashrc='vi ~/.bashrc'


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

function sea {
    ls | grep $1
}
function help {
    $1 --help | more 
}
#export COM=/media/xiaolong/娱乐/小燕燕/计算机网络视频教/
#挂在 硬盘
#function yule {
   #sudo mount /dev/sda6 /media/xiaolong/娱乐
#}
#汇编指令
function ass {
                #这里不能用as做为函数名 他会递归调用他自己
     
    name=`echo $1 | gawk -F. '{ print $1}'` 
                                            #使用这个方法 可以是 shell中的
                                            #变量个 gawk中 通信
    name1="$name.s -o $name.o"
    as $name1  
                #如果用了的话 在这里递归调用他自己
    name2="$name.o -o $name"
    ld $name2
} 

function ec {
    ass $1
    ./$1
    echo $?
}

#c语言编译
function gg {
    name=`echo $1 | gawk -F. '{ print $1}'` 
                                            #使用这个方法 可以是 shell中的
                                            #变量个 gawk中 通信
    name1="$name.c -o $name"
    gcc $name1  
    
}
    
function hh {
    echo "  Are you sure to shudown ?"
    read whether
    #enter="\n"
    if [ $whether = $enter ]
    then
        shutdown -h now
    else
        echo "Have A Good Time !!!!"
    fi
}

#delete something carefully
function del {
    echo "Are you sure to delete $1"
    read whether
    #enter="\n"
    if [ $whether = $enter ]
    then
        rm -fr $1
    else
        echo "Have a good time!!!"
    fi
}

#查看 电磁场    正确的顺序
function lookat {
    l |  gawk 'BEGIN{FS="."} {print $2,$1}' | sort  | more
}
function incre {
    file=count
    num=`sed -n '1s/\([0-9]*\)/\1/p' $file`
    newnum=$[$num + 1] 
    text=`sed '1s/[0-9]*/'$newnum'/' $file`   #使用引号可以让shell和sed通信
    echo $text > $file 
    cat count
}

#github
function commit {
    if [ $1 ]
    then
        git commit -m $1
    else
        git commit -m "update"
    fi
}


function gittoremote {
git add * && git commit -m "$1" && git push origin master
}





PS1='${debian_chroot:+($debian_chroot)}\[\e[1;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
