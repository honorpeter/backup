算数操作符：
    + — * / %      %两边是整形操作符必须是

位移操作符：
    对于无符号的左右移动是逻辑上的移动 但对于 有符号的取决于编译器
    左移操作符: <<          a << 5     a 左移5位  5必须是正数 右移也是
    右移操作符：>>

位操作符：
    &   |   ^   ~ : AND         OR      XOR     操作数要求为整数
                        a & b       a|b
            ～对整型类型的操作数 求补操作   操作数中 原先为1的变为0 0的变1
            ^按位异或 若参加运算的两个二进制位值相同则为0，否则为1 

复合操作符：
    =和上面的每一都可以写成
        +=  -=  <<=     &=  ......


单目操作符：
    !       ++      -       &       sizeof
    ~       --      +       *       (类型) 
    ！对它操作的数执行逻辑反操作  
    ～对整型类型的操作数 求补操作   操作数中 原先为1的变为0 0的变1
    -   负值
    &   取地址
    +正号
    *  间接访问操作符
    sizeof  判断操作数类型长度  以字节为单位    
        sizeof( int ) 判断整形int多少字节       sizeof (a)  判断a
            若a为数组 返回数组的长度 以字节为单位

关系操作符：
    <   >   <=  >=  ==  !=  
        关系操作符 作用完之后 返回一个整型数 0 或 1     不是逻辑bool型
            可以负值 给整型变量

逻辑操作符：
    &&  ||              具有短路性质 当前面一个不符合 条件 不再执行下一个
        
条件操作符：
    ? :         一般=号左边的比较长的时候 使用

逗号操作符：
    ,,,,,,,,

下标引用
    array[]
    .   ->

操作符优先级：
    ()      聚组    改变优先级
    ()      函数调用
    []      下标引用
    .       访问 结构体成员
    ->      指针访问结构体成员
    单目操作符：    ++  后缀自增
                    --  后缀
                    !
                    ~
                    +
                    -
                    ++  前缀
                    --
                    *
                    &
                    sizeof
                    (int)

    运算操作符 ：   *
                    /
                    %
                    +
                    -
    位移操作符：
                    <<
                    >>
    条件操作符：    
                    >
                    >=
                    <
                    <=
                    ==
                    !=
    位操作符：
                    &
                    ^
                    |
    逻辑操作符：
                    &&
                    ||
    条件操作符：    
                    ? :
    赋值操作符
                    =
    复合操作符：
                    +=
                    -=
                    *=
                    /=
                    %=
                    <<=
                    >>=
                    &=
                    ^=
                    !=
    ,,,逗号
            

                    


